{"ast":null,"code":"var _jsxFileName = \"/Users/sabrinazhai/Desktop/School/PUI/todoapp/src/Tomorrow.js\";\nimport React from 'react';\nimport './ListItems.css';\nimport FlipMove from 'react-flip-move';\nimport { Container, Row } from 'react-bootstrap';\n\nfunction Tomorrow(props) {\n  const schedule = props.schedule; //       <p> {item.time + \":00\"} </p>\n  // console.log(\"schedule from js:  \" + JSON.stringify(schedule, null, 4));\n\n  const scheduleItems = schedule.map(item => {\n    return React.createElement(Container, {\n      className: \"list\",\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"taskItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" \", item.time + \":00\", \" \"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"new-password\",\n      value: item.task,\n      onChange: e => {\n        props.setUpdate(\"tomorrow\", e.target.value, item.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(FlipMove, {\n    duration: 300,\n    easing: \"ease-in-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, scheduleItems));\n}\n\nexport default Tomorrow;","map":{"version":3,"sources":["/Users/sabrinazhai/Desktop/School/PUI/todoapp/src/Tomorrow.js"],"names":["React","FlipMove","Container","Row","Tomorrow","props","schedule","scheduleItems","map","item","key","time","task","e","setUpdate","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB,CADoB,CAEpB;AACA;;AACA,QAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,IACvC;AACE,WAAO,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAG,MAAvB;AAA8B,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEQ;AAAO,MAAA,OAAO,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8BD,IAAI,CAACE,IAAL,GAAY,KAA1C,MAFR,EAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAC,cAAhC;AACG,MAAA,KAAK,EAAEF,IAAI,CAACG,IADf;AACqB,MAAA,QAAQ,EAAGC,CAAD,IAAK;AAC5BR,QAAAA,KAAK,CAACS,SAAN,CAAgB,UAAhB,EAA4BD,CAAC,CAACE,MAAF,CAASC,KAArC,EAA4CP,IAAI,CAACC,GAAjD;AAAsD,OAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADK,CAAP;AASD,GAXqB,CAAtB;AAaA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,GAApB;AAAyB,IAAA,MAAM,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,aADD,CADG,CAAP;AAKD;;AAED,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport './ListItems.css';\nimport FlipMove from 'react-flip-move';\nimport { Container, Row } from 'react-bootstrap';\n\n\nfunction Tomorrow(props){\n    const schedule = props.schedule;\n    //       <p> {item.time + \":00\"} </p>\n    // console.log(\"schedule from js:  \" + JSON.stringify(schedule, null, 4));\n    const scheduleItems = schedule.map(item =>\n    {\n      return <Container className = \"list\" key={item.key}>\n\t       <Row className = \"taskItem\">\n\t       \t\t<input type=\"checkbox\"/>\n                <label htmlFor = \"checkbox\"> {item.time + \":00\"} </label>\n\t\t        <input type=\"text\" autoComplete=\"new-password\"\n\t\t         \t\tvalue={item.task} onChange={(e)=>{ \n\t\t         \t\t\t\t\t\t\tprops.setUpdate(\"tomorrow\", e.target.value, item.key)}} />\n\t        </Row>\n        </Container>\n    })\n\n    return <div>\n        <FlipMove duration={300} easing=\"ease-in-out\">\n        {scheduleItems}\n        </FlipMove>\n    </div>;\n  }\n\n  export default Tomorrow;"]},"metadata":{},"sourceType":"module"}