{"ast":null,"code":"var _jsxFileName = \"/Users/sabrinazhai/Desktop/School/PUI/To-Do-App/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faTrash);\nvar startTime = 0;\nvar endTime = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        task: '',\n        key: '',\n        time: 0,\n        completed: false\n      }\n    };\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.populateList = this.populateList.bind(this);\n    this.setStart = this.setStart.bind(this);\n    this.setEnd = this.setEnd.bind(this);\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.task !== \"\") {\n      console.log(\"logging new item\");\n      const items = [...this.state.items, newItem];\n      this.setState({\n        // resets the original bar\n        items: items,\n        currentItem: {\n          task: '',\n          key: '',\n          time: 0,\n          completed: false\n        }\n      });\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        task: e.target.value,\n        key: Date.now()\n      }\n    });\n  } //Deletes an item from the list\n\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n  } //Toggles the completion of a task\n\n\n  toggleComplete(e) {\n    var tempStatus = this.state.completed;\n    this.setState({\n      currentItem: {\n        completed: !tempStatus // Switching the value\n\n      }\n    });\n  } //Updates the task \n\n\n  setUpdate(task, key) {\n    const tempItem = this.state.items;\n    tempItem.map(x => {\n      if (x.key === key) {\n        x.task = task;\n      }\n    });\n    this.setState({\n      items: tempItem\n    });\n  }\n\n  populateList() {\n    console.log(\"the start is:\" + startTime);\n    console.log(\"the END is:\" + endTime); //take the two key values from the input box\n\n    const total = endTime - startTime;\n\n    for (let i = 0; i < total; i++) {//create list with the start time and end time as its state\n    }\n  } //delete this function later\n  // addItem(e){\n  //      e.preventDefault();\n  //      const newItem = this.state.currentItem;\n  //      if(newItem.task !==\"\"){\n  //          const items = [...this.state.items, newItem];\n  //          this.setState({\n  //              items: items,\n  //              currentItem:{\n  //                  task:'',\n  //                  key:'',\n  //                  time: 0\n  //                }\n  //          })\n  //      }\n  //  }\n\n\n  setStart(e) {\n    e.preventDefault();\n    startTime = e.target.value; // populateList();\n  }\n\n  setEnd(e) {\n    e.preventDefault();\n    endTime = e.target.value; // populateList();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"to-do-form\",\n      onSubmit: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      max: \"23\",\n      value: this.state.currentItem.start,\n      onChange: this.setStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      max: \"23\",\n      value: this.state.currentItem.end,\n      onChange: this.setEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"taskName\",\n      placeholder: \"Enter task\",\n      value: this.state.currentItem.task,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Add Task\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.items.task), React.createElement(ListItems, {\n      items: this.state.items,\n      deleteItem: this.deleteItem,\n      setUpdate: this.setUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \" Today \")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sabrinazhai/Desktop/School/PUI/To-Do-App/src/App.js"],"names":["React","ListItems","library","faTrash","add","startTime","endTime","App","Component","constructor","props","state","items","currentItem","task","key","time","completed","addItem","bind","handleInput","deleteItem","setUpdate","populateList","setStart","setEnd","e","preventDefault","newItem","console","log","setState","target","value","Date","now","filteredItems","filter","item","toggleComplete","tempStatus","tempItem","map","x","total","i","render","start","end"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nvar startTime = 0;\nvar endTime = 0;\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      currentItem:{\n        task:'',\n        key:'',\n        time: 0,\n        completed: false\n      }\n    }\n\n  \n\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.populateList = this.populateList.bind(this);\n    this.setStart = this.setStart.bind(this);\n    this.setEnd = this.setEnd.bind(this);\n  }\n\n\n    addItem(e){\n        e.preventDefault();\n        const newItem = this.state.currentItem;\n        if(newItem.task !==\"\"){\n            console.log(\"logging new item\");\n            const items = [...this.state.items, newItem];\n            this.setState({ // resets the original bar\n                items: items,\n                currentItem:{\n                    task:'',\n                    key:'',\n                    time: 0,\n                    completed: false\n                  }\n            })\n        }\n    }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        task: e.target.value,\n        key: Date.now()\n      }\n    })\n\n  }\n\n  //Deletes an item from the list\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })\n\n  }\n\n   //Toggles the completion of a task\n   toggleComplete(e){\n      var tempStatus = this.state.completed;\n      this.setState({\n         currentItem:{\n            completed: !tempStatus // Switching the value\n         }\n      })\n  }\n\n  //Updates the task \n  setUpdate(task, key){\n    const tempItem = this.state.items;\n    tempItem.map( x =>{      \n      if(x.key===key){\n        x.task = task;\n      }\n    })\n    this.setState({\n      items: tempItem\n    })\n  }\n\n   populateList(){\n      console.log(\"the start is:\" + startTime);\n      console.log(\"the END is:\" + endTime);\n\n      //take the two key values from the input box\n      const total = endTime - startTime;\n      for (let i = 0; i < total; i++){\n        //create list with the start time and end time as its state\n      }\n   }\n\n   //delete this function later\n   // addItem(e){\n   //      e.preventDefault();\n   //      const newItem = this.state.currentItem;\n   //      if(newItem.task !==\"\"){\n   //          const items = [...this.state.items, newItem];\n   //          this.setState({\n   //              items: items,\n   //              currentItem:{\n   //                  task:'',\n   //                  key:'',\n   //                  time: 0\n   //                }\n   //          })\n   //      }\n   //  }\n\n\n    setStart(e){\n        e.preventDefault();\n        startTime = e.target.value;\n        // populateList();\n   }\n\n    setEnd(e){\n        e.preventDefault();\n        endTime = e.target.value;\n        // populateList();\n    }\n\n\n render(){\n  return (\n    <div className=\"App\">\n      <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"number\" min=\"0\" max=\"23\" value = {this.state.currentItem.start} onChange = {this.setStart}></input>\n          <input type=\"number\" min=\"0\" max=\"23\" value = {this.state.currentItem.end}  onChange = {this.setEnd}></input>\n          <input type=\"text\" id = \"taskName\" placeholder=\"Enter task\" value= {this.state.currentItem.task} onChange={this.handleInput}></input>\n          <button type=\"submit\">Add Task</button>\n        </form>\n        <p>{this.state.items.task}</p>\n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n        <p> Today </p>\n\n      </header>\n    </div>\n  );\n }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}