{"ast":null,"code":"var _jsxFileName = \"/Users/sabrinazhai/Desktop/School/PUI/todoapp/src/App.js\";\nimport React from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport ListItems from './ListItems';\nimport Schedule from './Schedule';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faTrash);\nvar startTime = 0;\nvar endTime = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.crossLine = event => {\n      const element = event.target;\n      element.classList.toggle(\"crossed-line\");\n    };\n\n    this.state = {\n      items: [],\n      currentItem: {\n        task: '',\n        key: '',\n        time: 0,\n        completed: false\n      },\n      schedule: [] // console.log(\"starting out : \" + JSON.stringify(this.state.currentItem));\n\n    };\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.populateList = this.populateList.bind(this);\n    this.setStart = this.setStart.bind(this);\n    this.setEnd = this.setEnd.bind(this);\n    this.loadItems = this.loadItems.bind(this);\n    this.addSchedule = this.addSchedule.bind(this);\n  }\n\n  loadItems() {\n    console.log(\"continuoous\" + this.state.items);\n    this.state.items = JSON.parse(localStorage.getItem('listItems'));\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.task !== \"\") {\n      const taskItems = [...this.state.items, newItem];\n      this.setState({\n        //Resets to default\n        items: taskItems,\n        currentItem: {\n          task: '',\n          key: '',\n          time: 0,\n          completed: false\n        }\n      });\n      localStorage.setItem('listItems', JSON.stringify(taskItems));\n    }\n  }\n\n  addSchedule(e) {\n    e.preventDefault();\n    console.log(\"s: \" + startTime + \" e: \" + endTime);\n    const stepsArray = Array.from({\n      length: endTime - startTime + 1\n    }, (_, index) => index + 1);\n    console.log(stepsArray);\n    stepsArray.map(x => {\n      const tempItem = {\n        task: '',\n        key: Date.now(),\n        time: parseInt(startTime) + parseInt(x) - 1,\n        completed: false\n      };\n      const scheduleArray = [...this.state.schedule, tempItem];\n      console.log(\"TEMPITEM: \" + JSON.stringify(tempItem, null, 4));\n    }); // console.log(\"scheduleArray: \" + JSON.stringify(scheduleArray, null, 4));\n\n    this.setState({\n      schedule: scheduleArray\n    });\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        task: e.target.value,\n        key: Date.now(),\n        time: startTime,\n        completed: false\n      }\n    });\n  } //Deletes an item from the list\n\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n  } //Toggles the completion of a task\n\n\n  toggleComplete(value, key) {\n    const tempItem = this.state.items;\n    tempItem.map(x => {\n      if (x.key === key) {\n        //If it is the item we are looking for \n        x.completed = !x.completed;\n      }\n    });\n    this.setState({\n      items: tempItem\n    });\n    console.log(\"current completion:\" + this.state.completed);\n  } //Updates the task \n\n\n  setUpdate(task, key) {\n    const tempItem = this.state.items;\n    tempItem.map(x => {\n      if (x.key === key) {\n        x.task = task;\n        x.completed = !x.completed;\n\n        if (x.completed) {\n          x.textDecor = 'line';\n        } else {\n          x.textDecor = null;\n        }\n      }\n\n      console.log(\"current completion:\" + x.completed);\n    });\n    this.setState({\n      items: tempItem\n    });\n    console.log(\"ITEMS OUTSIDE: \" + JSON.stringify(this.state.items));\n  }\n\n  populateList() {\n    console.log(\"the start is:\" + startTime);\n    console.log(\"the END is:\" + endTime); //take the two key values from the input box\n\n    const total = endTime - startTime;\n\n    for (let i = 0; i < total; i++) {//create list with the start time and end time as its state\n    }\n  } //delete this function later\n  // addItem(e){\n  //      e.preventDefault();\n  //      const newItem = this.state.currentItem;\n  //      if(newItem.task !==\"\"){\n  //          const items = [...this.state.items, newItem];\n  //          this.setState({\n  //              items: items,\n  //              currentItem:{\n  //                  task:'',\n  //                  key:'',\n  //                  time: 0\n  //                }\n  //          })\n  //      }\n  //  }\n\n\n  setStart(e) {\n    e.preventDefault();\n    startTime = e.target.value; // populateList();\n  }\n\n  setEnd(e) {\n    e.preventDefault();\n    endTime = e.target.value; // populateList();\n  }\n\n  componentDidMount() {\n    var options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    };\n    var prnDt = 'Printed on ' + new Date().toLocaleTimeString('en-us', options);\n    console.log(prnDt);\n  }\n\n  render() {\n    return (// this.state.items = JSON.parse(localStorage.getItem('listItems'))\n      React.createElement(\"div\", {\n        className: \"Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"to-do-form\",\n        onSubmit: this.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"taskName\",\n        placeholder: \"Enter task\",\n        value: this.state.currentItem.task,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Add Task\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.state.items.task), React.createElement(ListItems, {\n        items: this.state.items,\n        deleteItem: this.deleteItem,\n        setUpdate: this.setUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"to-do-form\",\n        onSubmit: this.addSchedule,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"23\",\n        value: this.state.currentItem.start,\n        onChange: this.setStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"23\",\n        value: this.state.currentItem.end,\n        onChange: this.setEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Schedule, {\n        schedule: this.state.schedule,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sabrinazhai/Desktop/School/PUI/todoapp/src/App.js"],"names":["React","ListItems","Schedule","library","faTrash","add","startTime","endTime","App","Component","constructor","props","crossLine","event","element","target","classList","toggle","state","items","currentItem","task","key","time","completed","schedule","addItem","bind","handleInput","deleteItem","toggleComplete","setUpdate","populateList","setStart","setEnd","loadItems","addSchedule","console","log","JSON","parse","localStorage","getItem","e","preventDefault","newItem","taskItems","setState","setItem","stringify","stepsArray","Array","from","length","_","index","map","x","tempItem","Date","now","parseInt","scheduleArray","value","filteredItems","filter","item","textDecor","total","i","componentDidMount","options","weekday","year","month","day","hour","minute","second","hour12","prnDt","toLocaleTimeString","render","start","end"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport ListItems from './ListItems'\nimport Schedule from './Schedule'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nvar startTime = 0;\nvar endTime = 0;\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      currentItem:{\n        task:'',\n        key:'',\n        time: 0,\n        completed: false\n      },\n      schedule: []\n    }\n    // console.log(\"starting out : \" + JSON.stringify(this.state.currentItem));\n\n  \n\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.populateList = this.populateList.bind(this);\n    this.setStart = this.setStart.bind(this);\n    this.setEnd = this.setEnd.bind(this);\n    this.loadItems = this.loadItems.bind(this);\n    this.addSchedule = this.addSchedule.bind(this);\n  }\n\n\n\n   loadItems(){\n      console.log(\"continuoous\" + this.state.items);\n      this.state.items = JSON.parse(localStorage.getItem('listItems'));\n   }\n\n    addItem(e){\n        e.preventDefault();\n        const newItem = this.state.currentItem;\n        if(newItem.task !==\"\"){\n            const taskItems = [...this.state.items, newItem];\n            this.setState({ //Resets to default\n               items: taskItems,\n               currentItem:{\n                 task:'',\n                 key:'',\n                 time: 0,\n                 completed: false\n               }\n            })\n\n            localStorage.setItem('listItems', JSON.stringify(taskItems));           \n        }\n    }\n\n    addSchedule(e){\n    e.preventDefault();\n\n    console.log(\"s: \" + startTime + \" e: \" + endTime);\n    \n    const stepsArray = Array.from({length: endTime - startTime + 1}, (_, index) => index + 1);\n    console.log(stepsArray);\n\n    stepsArray.map(x => {\n        const tempItem = {\n                          task:'',\n                          key: Date.now(),\n                          time: parseInt(startTime) + parseInt(x) - 1,\n                          completed: false\n                        }\n\n        const scheduleArray = [...this.state.schedule, tempItem];\n        console.log(\"TEMPITEM: \" + JSON.stringify(tempItem, null, 4));\n      })\n\n      // console.log(\"scheduleArray: \" + JSON.stringify(scheduleArray, null, 4));\n      this.setState({schedule: scheduleArray})\n    }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n         task: e.target.value,\n         key: Date.now(),\n         time: startTime,\n         completed: false\n      }\n    })\n\n  }\n\n\n\n  //Deletes an item from the list\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })\n\n  }\n\n   //Toggles the completion of a task\n   toggleComplete(value, key){\n      const tempItem = this.state.items;\n      tempItem.map( x =>{      \n         if(x.key===key){ //If it is the item we are looking for \n           x.completed = !x.completed;\n         }\n      })\n      this.setState({\n         items: tempItem\n      })\n      console.log(\"current completion:\" + this.state.completed);\n  }\n\n  //Updates the task \n  setUpdate(task, key){\n    const tempItem = this.state.items;\n    tempItem.map( x =>{      \n      if(x.key===key){\n        x.task = task;\n        x.completed = !x.completed;  \n\n        if(x.completed){\n            x.textDecor='line';\n         }\n         else{\n            x.textDecor = null;\n         }\n      }\n\n\n      console.log(\"current completion:\" + x.completed);\n    })\n  \n    this.setState({\n      items: tempItem\n    })\n    console.log(\"ITEMS OUTSIDE: \" + JSON.stringify(this.state.items));\n\n    \n  }\n\n  crossLine = event => {\n        const element = event.target;\n        element.classList.toggle(\"crossed-line\");\n    };\n\n\n   populateList(){\n      console.log(\"the start is:\" + startTime);\n      console.log(\"the END is:\" + endTime);\n\n      //take the two key values from the input box\n      const total = endTime - startTime;\n      for (let i = 0; i < total; i++){\n        //create list with the start time and end time as its state\n      }\n   }\n\n   //delete this function later\n   // addItem(e){\n   //      e.preventDefault();\n   //      const newItem = this.state.currentItem;\n   //      if(newItem.task !==\"\"){\n   //          const items = [...this.state.items, newItem];\n   //          this.setState({\n   //              items: items,\n   //              currentItem:{\n   //                  task:'',\n   //                  key:'',\n   //                  time: 0\n   //                }\n   //          })\n   //      }\n   //  }\n\n\n    setStart(e){\n        e.preventDefault();\n        startTime = e.target.value;\n        // populateList();\n   }\n\n    setEnd(e){\n        e.preventDefault();\n        endTime = e.target.value;\n        // populateList();\n    }\n\n    componentDidMount(){\n      var options = {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };\n      var prnDt = 'Printed on ' + new Date().toLocaleTimeString('en-us', options);\n\n      console.log(prnDt);\n    }\n\n\n render(){\n  return (\n   // this.state.items = JSON.parse(localStorage.getItem('listItems'))\n   <div className = \"Container\">\n    <div className=\"App\">\n      <header>\n\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" id = \"taskName\" placeholder=\"Enter task\" value= {this.state.currentItem.task} onChange={this.handleInput}></input>\n          <button type=\"submit\">Add Task</button>\n        </form>\n        <p>{this.state.items.task}</p>\n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n\n      </header>\n    </div>\n\n    <div className=\"App\">\n      <header>\n      \n        <form id=\"to-do-form\" onSubmit={this.addSchedule}>\n          <input type=\"number\" min=\"0\" max=\"23\" value = {this.state.currentItem.start} onChange = {this.setStart}></input>\n          <input type=\"number\" min=\"0\" max=\"23\" value = {this.state.currentItem.end}  onChange = {this.setEnd}></input>\n          <button type=\"submit\">Create</button>\n        </form>\n          <Schedule schedule ={this.state.schedule} />\n\n      </header>\n    </div>\n    </div>\n  );\n }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}